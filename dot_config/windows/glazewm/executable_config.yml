general:
  # Commands to run when the WM has started (e.g. to run a script or launch
  # another application).
  startup_commands: ["shell-exec zebar"]

  # Commands to run just before the WM is shutdown.
  shutdown_commands: ["shell-exec taskkill /IM zebar.exe /F"]

  # Commands to run after the WM config has reloaded.
  config_reload_commands: []

  # Whether to automatically focus windows underneath the cursor.
  focus_follows_cursor: false

  show_all_in_taskbar: true

  # Whether to switch back and forth between the previously focused
  # workspace when focusing the current workspace.
  toggle_workspace_on_refocus: false

  cursor_jump:
    # Whether to automatically move the cursor on the specified trigger.
    enabled: true

    # Trigger for cursor jump:
    # - 'monitor_focus': Jump when focus changes between monitors.
    # - 'window_focus': Jump when focus changes between windows.
    trigger: "monitor_focus"

window_behavior:
  # New windows are created in this state whenever possible.
  # Allowed values: 'tiling', 'floating'.
  initial_state: "tiling"

  # Sets the default options for when a new window is created. This also
  # changes the defaults for when the state change commands, like
  # `set-floating`, are used without any flags.
  state_defaults:
    floating:
      # Whether to center floating windows by default.
      centered: true

      # Whether to show floating windows as always on top.
      shown_on_top: false

    fullscreen:
      # Maximize the window if possible. If the window doesn't have a
      # maximize button, then it'll be fullscreen'ed normally instead.
      maximized: false

      # Whether to show fullscreen windows as always on top.
      shown_on_top: false

gaps:
  # Gap between adjacent windows.
  inner_gap: "5px"

  # Gap between windows and the screen edge.
  outer_gap:
    top: "40px"
    right: "0px"
    bottom: "0px"
    left: "0px"

window_rules:
  - commands: ["move --workspace 0"]
    match:
      - window_process: { regex: "wt|wezterm|cmd|pwsh|powershell|alacritty" }

  - commands: ["move --workspace 1"]
    match:
      - window_process: { regex: "teams|ms-teams|Teams" }
        # window_title, window_class

  - commands: ["move --workspace 2"]
    match:
      - window_process: { regex: "msedge|brave|chrome|firefox" }

  - commands: ["move --workspace 4"]
    match:
      - window_process: { regex: "rider|Rider|rider64" }

  - commands: ["move --workspace 3"]
    match:
      - window_process: { regex: "vcxsrv|vcxsrv.exe" }

  - commands: ["move --workspace 3"]
    match:
      - window_title: { regex: "emacs|Emacs|doom|Doom" }

  - commands: ["move --workspace 7"]
    match:
      - window_process: { regex: "Todoist|todoist.exe" }

  - commands: ["move --workspace 5"]
    match:
      - window_process: { regex: "outlook|Outlook|olk|OUTLOOK" }

  - commands: ["ignore"]
    match:
      # Ignores any Zebar windows.
      - window_process: { equals: "zebar" }

      # - window_process: { regex: "msrdc|wslhost" }

      # Ignores picture-in-picture windows for browsers.
      # Note that *both* the title and class must match for the rule to run.
      - window_title: { regex: "[Pp]icture.in.[Pp]icture" }
        window_class: { regex: "Chrome_WidgetWin_1|MozillaDialogClass" }

      # Ignore rules for various 3rd-party apps.
      - window_process: { equals: "PowerToys" }
        window_class: { regex: 'HwndWrapper\[PowerToys\.PowerAccent.*?\]' }
      - window_process: { equals: "PowerToys" }
        window_title: { regex: ".*? - Peek" }
      - window_process: { equals: "Lively" }
        window_class: { regex: "HwndWrapper" }

workspaces:
  - name: "0"
    display_name: "Terminal"
  - name: "1"
    display_name: "Teams"
  - name: "2"
    display_name: "Browser"
  - name: "3"
    display_name: "Emacs"
  - name: "4"
    display_name: "Dev"
  - name: "5"
    display_name: "Email"
  - name: "6"
    display_name: "Files"
  - name: "7"
  - name: "8"
  - name: "9"

window_effects:
  # Visual effects to apply to the focused window.
  focused_window:
    # Highlight the window with a colored border.
    border:
      enabled: true
      color: "#b28cff"
    # Remove the title bar from the window's frame. Note that this can
    # cause rendering issues for some applications.
    hide_title_bar:
      enabled: false

    # Change the corner style of the window's frame.
    # ** Exclusive to Windows 11 due to API limitations.
    corner_style:
      enabled: false
      # Allowed values: 'square', 'rounded', 'small_rounded'.
      style: "square"

  # Visual effects to apply to non-focused windows.
  other_windows:
    border:
      enabled: true
      color: "#a1a1a1"
    hide_title_bar:
      enabled: false
    corner_style:
      enabled: false
      style: "square"

binding_modes:
  # When enabled, the focused window can be resized via arrow keys or HJKL.
  - name: "resize"
    keybindings:
      - commands: ["resize --width -2%"]
        bindings: ["h", "left"]
      - commands: ["resize --width +2%"]
        bindings: ["l", "right"]
      - commands: ["resize --height +2%"]
        bindings: ["k", "up"]
      - commands: ["resize --height -2%"]
        bindings: ["j", "down"]
      # Press enter/escape to return to default keybindings.
      - commands: ["wm-disable-binding-mode --name resize"]
        bindings: ["escape", "enter"]

bar:
  height: "35px"
  position: "top"
  opacity: 1.0
  background: "#101010c4"
  foreground: "#ffffff"
  font_family: "JetBrains Mono"
  font_size: "20px"
  padding: "4px 6px"
  offset_x: "10px"
  offset_y: "10px"
  border_radius: "0"
  components_left:
    - type: "workspaces"
      focused_workspace_background: "#8192B333"
      displayed_workspace_background: "#42403e33"
      default_workspace_background: "transparent"
  components_center:
    - type: "window title"
  components_right:
    - type: "tiling direction"
      label_horizontal: "‚ÆÇ"
      label_vertical: "‚ÆÅ"
      background: "#8192B333"
      margin: "0 4px"
      padding: "0 8px"
    - type: "binding mode"
      background: "#8192B333"
      margin: "0 4px 0 0"
      padding: "0 8px"
    - type: "battery"
      draining: "{battery_level}% üîã remaining"
      power_saver: "{battery_level}% üîÅ (power saver)"
      charging: "{battery_level}% ‚ö° (charging)"
    - type: "clock"
      time_formatting: "hh:mm tt  ddd d MMM yyyy"
      margin: "0 0 0 10px"

keybindings:
  # Shift focus in a given direction.
  - commands: ["focus --direction left"]
    bindings: ["alt+h", "alt+left"]
  - commands: ["focus --direction right"]
    bindings: ["alt+l", "alt+right"]
  - commands: ["focus --direction up"]
    bindings: ["alt+k", "alt+up"]
  - commands: ["focus --direction down"]
    bindings: ["alt+j", "alt+down"]

  # Move focused window in a given direction.
  - commands: ["move --direction left"]
    bindings: ["alt+shift+h", "alt+shift+left"]
  - commands: ["move --direction right"]
    bindings: ["alt+shift+l", "alt+shift+right"]
  - commands: ["move --direction up"]
    bindings: ["alt+shift+k", "alt+shift+up"]
  - commands: ["move --direction down"]
    bindings: ["alt+shift+j", "alt+shift+down"]

  # Resize focused window by a percentage or pixel amount.
  - commands: ["resize --width -2%"]
    bindings: ["alt+shift+control+h"]
  - commands: ["resize --width +2%"]
    bindings: ["alt+shift+control+l"]
  - commands: ["resize --height +2%"]
    bindings: ["alt+shift+control+k"]
  - commands: ["resize --height -2%"]
    bindings: ["alt+shift+control+j"]

  # As an alternative to the resize keybindings above, resize mode enables resizing via
  # HJKL or arrow keys. The binding mode is defined above with the name "resize".
  - commands: ["wm-enable-binding-mode --name resize"]
    bindings: ["alt+r"]

  # Redraw all windows.
  - commands: ["wm-redraw"]
    bindings: ["alt+shift+r"]

  # Disables window management and all other keybindings until alt+shift+p
  # is pressed again.
  - commands: ["wm-toggle-pause"]
    bindings: ["alt+shift+p"]

  # Change focus between floating / tiling windows.
  # Disabled because of conflicts with PowerToys Run
  #- commands: "toggle focus mode"
  #  binding: "Alt+Space"

  # Change the focused window to be floating.
  - commands: ["toggle-floating --centered"]
    bindings: ["alt+t"]

  # Change the focused window to be fullscreen.
  - commands: ["toggle-fullscreen"]
    bindings: ["alt+f"]

  # minimize focused window.
  - commands: ["toggle-minimized"]
    bindings: ["alt+m"]

  # Close focused window.
  - commands: ["close"]
    bindings: ["alt+q"]

  # Kill GlazeWM process safely.
  - commands: ["wm-exit"]
    bindings: ["alt+shift+e"]

  - commands:
      [
        "shell-exec 'glazewm command wm-exit; glazewm start --config=''C:\\Users\\austin.kearns\\.config\\glazewm\\config.yml'''",
      ]
    bindings: ["alt+control+shift+e"]

  # Re-evaluate configuration file.
  - commands: ["wm-reload-config"]
    bindings: ["alt+shift+o"]

  # Launch CMD terminal. Alternatively, use `shell-exec wt` or
  # `shell-exec %ProgramFiles%/Git/git-bash.exe` to start Windows
  # Terminal and Git Bash respectively.
  - commands: ["shell-exec alacritty"]
    bindings: ["alt+enter"]

  - commands:
      [
        "shell-exec alacritty --working-directory=\\\\wsl$\\Arch\\home\\aus -e wsl -d Arch",
      ]
    bindings: ["alt+shift+enter"]

  - commands: ["shell-exec firefox"]
    bindings: ["alt+w"]

  - commands:
      [
        'shell-exec wsl bash -ic ''emacsclient -nw -e "(my/org-terminal-capture)"''',
      ]
    bindings: ["alt+shift+a"]

    # gui
    # 'shell-exec C:\\Windows\\System32\\cmd.exe /c start /min wsl bash -emacsclient -c"',
    # terminal
  - commands: ['shell-exec wsl bash -ic ''emacsclient -a \"\" -nw''']
    bindings: ["alt+e"]

  # - commands: [
  #       # 'shell-exec C:\Windows\System32\cmd.exe /c wsl bash -ic "emacsclient -c"',
  #       'shell-exec C:\Windows\System32\cmd.exe /c start /min wsl bash -ic "emacsclient -c"',
  #     ]
  #   bindings: ["alt+shift+x"]

  - commands: ["shell-exec explorer shell:startup"]
    bindings: ["alt+shift+x"]

  # Focus the next/previous active workspace defined in `workspaces` config.
  # - commands: ['focus --next-active-workspace']
  #   bindings: ['alt+n']
  # - commands: ['focus --prev-active-workspace']
  #   bindings: ['alt+p']

  # Focus the workspace that last had focus.
  - commands: ["focus --recent-workspace"]
    bindings: ["alt+b"]

  # Change focus to a workspace defined in `workspaces` config.
  - commands: ["focus --workspace 0"]
    bindings: ["alt+0"]
  - commands: ["focus --workspace 1"]
    bindings: ["alt+1"]
  - commands: ["focus --workspace 2"]
    bindings: ["alt+2"]
  - commands: ["focus --workspace 3"]
    bindings: ["alt+3"]
  - commands: ["focus --workspace 4"]
    bindings: ["alt+4"]
  - commands: ["focus --workspace 5"]
    bindings: ["alt+5"]
  - commands: ["focus --workspace 6"]
    bindings: ["alt+6"]
  - commands: ["focus --workspace 7"]
    bindings: ["alt+7"]
  - commands: ["focus --workspace 8"]
    bindings: ["alt+8"]
  - commands: ["focus --workspace 9"]
    bindings: ["alt+9"]

  # Move the focused window's parent workspace to a monitor in a given
  # direction.
  # - commands: ["move-workspace --direction left"]
  #   bindings: ["alt+shift+a"]
  # - commands: ["move-workspace --direction right"]
  #   bindings: ["alt+shift+f"]
  # - commands: ["move-workspace --direction up"]
  #   bindings: ["alt+shift+d"]
  # - commands: ["move-workspace --direction down"]
  #   bindings: ["alt+shift+s"]

  # Move focused window to a workspace defined in `workspaces` config.
  - commands: ["move --workspace 0", "focus --workspace 0"]
    bindings: ["alt+shift+0"]
  - commands: ["move --workspace 1", "focus --workspace 1"]
    bindings: ["alt+shift+1"]
  - commands: ["move --workspace 2", "focus --workspace 2"]
    bindings: ["alt+shift+2"]
  - commands: ["move --workspace 3", "focus --workspace 3"]
    bindings: ["alt+shift+3"]
  - commands: ["move --workspace 4", "focus --workspace 4"]
    bindings: ["alt+shift+4"]
  - commands: ["move --workspace 5", "focus --workspace 5"]
    bindings: ["alt+shift+5"]
  - commands: ["move --workspace 6", "focus --workspace 6"]
    bindings: ["alt+shift+6"]
  - commands: ["move --workspace 7", "focus --workspace 7"]
    bindings: ["alt+shift+7"]
  - commands: ["move --workspace 8", "focus --workspace 8"]
    bindings: ["alt+shift+8"]
  - commands: ["move --workspace 9", "focus --workspace 9"]
    bindings: ["alt+shift+9"]
